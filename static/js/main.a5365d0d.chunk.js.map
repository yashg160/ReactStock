{"version":3,"sources":["resources/theme.js","screens/Home.js","screens/Profile.js","screens/Dashboard.js","screens/Upload.js","serviceWorker.js","index.js","App.js","resources/config.js","resources/home-background.png"],"names":["theme","createMuiTheme","palette","primary","main","light","secondary","typography","fontFamily","Home","props","state","loading","error","redirect","user","userCreated","token","console","log","fetch","serverUrl","rawResponse","json","content","Error","statusMessage","response","profile","profileObj","accessToken","tokenObj","access_token","body","JSON","stringify","googleId","name","given","givenName","family","familyName","imageUrl","email","method","headers","Cookies","set","this","setState","loginUser","then","attemptLogin","catch","get","errorMessage","Backdrop","open","to","pathname","ThemeProvider","style","backgroundImage","height","backgroundPosition","backgroundSize","backgroundRepeat","display","flexDirection","justifyContent","alignItems","flexWrap","Typography","variant","align","color","marginBottom","marginTop","fontSize","clientId","render","renderProps","Button","textTransform","padding","paddingLeft","paddingRight","borderRadius","onClick","buttonText","onSuccess","handleLoginSuccess","onFailure","handleLoginFailure","React","Component","Profile","pictures","mainMenu","remove","history","push","getUser","getPicturesForUser","AppBar","position","backgroundColor","Toolbar","flex","Link","Avatar","src","width","event","currentTarget","marginLeft","marginRight","Grid","container","direction","spacing","item","xs","justify","length","Divider","overflow","GridList","cellHeight","map","picture","GridListTile","key","id","margin","alt","title","GridListTileBar","subtitle","Menu","anchorEl","keepMounted","Boolean","onClose","MenuItem","handleLogout","Dashboard","getPictures","_id","Upload","imageSelectHandler","target","files","imageCompression","getDataUrlFromFile","encodedImage","imageInput","validateTitle","uploadPicture","message","type","onChange","ref","click","objectFit","boxShadow","TextField","label","size","inputProps","value","handlePictureUpload","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","Fragment","IconButton","aria-label","window","location","hostname","match","ReactDOM","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a5365d0d.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#af0404',\n            light: '#ff0000'\n        },\n        secondary: {\n            main: '#252525',\n            light: '#414141'\n        }\n    },\n    typography: {\n        fontFamily: 'Nunito'\n    }\n});\n\nexport default theme;","import React from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../resources/theme';\n\nimport { GoogleLogin } from 'react-google-login';\n\nimport backgroundImage from '../resources/home-background.png';\nimport serverUrl from '../resources/config';\n\n\nexport default class Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            error: false,\n            redirect: false,\n            user: null,\n            userCreated: false\n        }\n    }\n\n    async attemptLogin(token) {\n        console.log(token);\n\n        let rawResponse = await fetch(`${serverUrl}/user/login?accessToken=${token}`);\n\n        let content = rawResponse = await rawResponse.json();\n        console.log(content);\n        if (content.error) {\n            throw Error(content.statusMessage);\n        }\n\n        return content;\n    }\n\n    async loginUser(response) {\n        var profile = response.profileObj;\n        var accessToken = response.tokenObj.access_token;\n\n        const body = JSON.stringify({\n            googleId: profile.googleId,\n            name: {\n                given: profile.givenName,\n                family: profile.familyName\n            },\n            imageUrl: profile.imageUrl,\n            email: profile.email,\n            accessToken: accessToken\n        });\n\n        let rawResponse = await fetch(`${serverUrl}/user/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: body,\n        });\n\n        let content = await rawResponse.json();\n\n        if (content.error) {\n            throw Error(content.statusMessage);\n        }\n\n        Cookies.set('TOKEN', content.accessToken);\n        this.setState({ userCreated: content.userCreated });\n\n        return content.accessToken;\n    }\n\n    handleLoginSuccess(response) {\n        console.log(response);\n        this.setState({ loading: true });\n\n        this.loginUser(response)\n            .then((token) => this.attemptLogin(token))\n            .then((content) => {\n                console.log(content);\n                this.setState({ redirect: true, loading: false, user: content.profile})\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ redirect: false, error: true, loading: false });\n        })\n    }\n\n    handleLoginFailure(response) {\n        console.log(response);\n    }\n\n    componentDidMount() {\n        \n        const token = Cookies.get('TOKEN');\n\n        this.attemptLogin(token)\n            .then((content) => {\n                if (content.error) \n                    throw Error(content.errorMessage);\n                else\n                    this.setState({ redirect: true, user: content.profile });\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ error: true, loading: false, redirect: false });\n            });\n    }\n\n\n    render() {\n\n        console.log(this.state);\n        if (this.state.loading)\n            return (\n                <Backdrop open={this.state.loading}/>\n            )\n        \n        else if (this.state.redirect && this.state.userCreated) \n            return (\n                <Redirect to={{\n                    pathname: '/profile',\n                    state:{user: this.state.user}\n                }}\n                />\n            )\n            \n        else if (this.state.redirect && !this.state.userCreated) \n            return (\n                <Redirect to={{\n                    pathname: '/dashboard',\n                    state:{user: this.state.user}\n                }}\n                />\n            )\n\n        return (\n            <ThemeProvider theme={theme}>\n                <div style={{\n                    backgroundImage: `url(${backgroundImage})`,\n                    height: '100vh',\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover',\n                    backgroundRepeat: 'no-repeat',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexWrap: 'wrap'\n                }}>\n\n                    <Typography\n                        variant='h1'\n                        align='center'\n                        style={{\n                            color: 'white',\n                            marginBottom: '16px'\n                        }}\n                    >\n                        ReactStock\n                </Typography>\n\n                    <Typography\n                        variant='body1'\n                        align='center'\n                        style={{\n                            color: 'white',\n                            marginTop: '8px',\n                            fontSize: 'large'\n                        }}\n                    >\n                        Share the world around you. Through images.\n                </Typography>\n                <Typography\n                        variant='body1'\n                        align='center'\n                        style={{\n                            color: 'white',\n                            fontSize: 'large'\n                        }}>\n                        Create pictures. Create memories.\n                </Typography>\n\n                    <div style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        flexWrap: 'wrap',\n                        marginTop: '28px'\n                    }}>\n\n                        <GoogleLogin\n                            clientId=\"695377450188-hjltbu0rri4vfneiugb9fh21p6i8b2gm.apps.googleusercontent.com\"\n                            render={renderProps => (\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        padding: '12px',\n                                        paddingLeft: '32px',\n                                        paddingRight: '32px',\n                                        borderRadius: '32px',\n                                        marginBottom: '4px'\n                                    }}\n                                    onClick={renderProps.onClick}\n                                >\n                                    <Typography\n                                        variant='body1'\n                                    >\n                                        Continue with Google\n                                </Typography>\n                                </Button>\n                            )}\n                            buttonText=\"Login\"\n                            onSuccess={response => this.handleLoginSuccess(response)}\n                            onFailure={response => this.handleLoginFailure(response)}\n                        />\n\n                    </div>\n\n\n\n                </div>\n            </ThemeProvider>\n            \n        )\n    }\n}","import React from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\n\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../resources/theme';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport serverUrl from '../resources/config';\nimport Divider from '@material-ui/core/Divider';\n\n\nexport default class Profile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            error: false,\n            user: null,\n            pictures: null,\n            mainMenu: null\n        }\n    }\n\n    handleLogout() {\n        Cookies.remove('TOKEN');\n\n        this.props.history.push('/');\n    }\n\n    async getUser(token) {\n        let rawResponse = await fetch(`${serverUrl}/user/login?accessToken=${token}`);\n        let content = await rawResponse.json();\n\n        console.log(content);\n\n        if (content.error)\n            throw Error(content.errorMessage);\n        \n        this.setState({ user: content.profile });\n        \n        return;\n    }\n\n    async getPicturesForUser(token) {\n        \n        let rawResponse = await fetch(`${serverUrl}/user/pictures?accessToken=${token}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n\n        let content = await rawResponse.json();\n        console.log(content);\n        if (content.error)\n            throw Error(content.errorMessage);\n        \n        return content;\n    }\n\n    componentDidMount() {\n\n        var token = Cookies.get('TOKEN');\n        if (token != null) {\n\n            this.getUser(token)\n                .then(() => this.getPicturesForUser(token))\n                .then((content) => this.setState({ pictures: content.pictures, loading: false, error: false }))\n                .catch((error) => {\n                    console.error(error);\n                    this.setState({ loading: false, error: true });\n                });\n        }\n\n    }\n\n    render() {\n        if (this.state.loading)\n            return (\n                <Backdrop open={this.state.loading}/>\n            )\n        \n        else if (this.state.redirect)\n            return (\n                <Redirect to={{\n                    pathname: '/'\n                }} />\n            )\n        \n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black' }}>\n                                <Link color='inherit' onClick={() => this.props.history.push('/')}>\n                                    ReactStock\n                            </Link>\n                            </Typography>\n\n                            <Avatar\n                                src={this.state.user.imageUrl}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px' }}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })}\n                            />\n\n                        </Toolbar>\n                    </AppBar>\n\n                    <div style={{\n                        marginTop: 80,\n                        marginLeft: 280,\n                        marginRight: 280,\n                        marginBottom: 40,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                    }}>\n\n                        <Grid container direction='row' spacing={10}>\n                            <Grid\n                                item\n                                container\n                                xs={6}\n                                direction='row'\n                                alignItems='center'\n                                justify='flex-end'>\n\n                                <Avatar\n                                    src={this.state.user.imageUrl}\n                                    variant='circle'\n                                    style={{ height: '160px', width: '160px' }}\n                                />\n\n                            </Grid>\n\n                            <Grid\n                                item\n                                container\n                                xs={6}\n                                direction='column'\n                                alignItems='flex-start'\n                                justify='center'\n                            >\n\n                                <Typography\n                                    variant='subtitle1'\n                                    style={{\n                                        color: 'black'\n                                    }}\n                                >\n                                    Name\n                                </Typography>\n\n                                <Typography\n                                    variant='h5'\n                                    align='center'\n                                    style={{\n                                        color: 'black'\n                                    }}\n                                >\n                                    {`${this.state.user.givenName} ${this.state.user.familyName}`}\n                                </Typography>\n\n                            </Grid>\n                        </Grid>\n\n                    </div>\n\n                    <div style={{\n                        marginTop: 40,\n                        marginLeft: 80,\n                        marginRight: 80,\n                        marginBottom: 40,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                    }}>\n\n                        {\n                            this.state.pictures.length == 0 ?\n                                <div>\n\n                                    <Typography variant='h5' align='center' style={{\n                                        marginTop: '40px',\n                                    }}>\n                                        Your Gallery\n                                    </Typography>\n\n                                    <Typography variant='body1' align='center' style={{\n                                        marginTop: '40px'\n                                    }}>\n                                        No pictures uploaded\n                                </Typography>\n\n                                    <Button\n                                        variant='contained'\n                                        onClick={() => this.props.history.push({\n                                            pathname: '/upload',\n                                            state: { user: this.state.user }\n                                        })}\n                                    >\n                                        Upload Now\n                                </Button>\n                                </div>\n\n                                :\n                                <div>\n\n                                    <Typography variant='h4' align='center' style={{\n                                        marginTop: '40px',\n                                    }}>\n                                        Your Gallery\n                                    </Typography>\n\n                                    <Divider variant='middle'\n                                        style={{\n                                            height: '4px',\n                                            marginTop: '12px',\n                                            backgroundColor: '#af0404'\n                                    }}/>\n\n                                    <div style={{\n                                        display: 'flex',\n                                        flexWrap: 'wrap',\n                                        justifyContent: 'space-around',\n                                        overflow: 'hidden',\n                                        marginTop: '80px'\n                                    }}>\n                                        <GridList\n                                            cellHeight={300}\n                                            style={{\n                                                width: '100%',\n                                                height: '100%',\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center'\n                                            }}>\n\n                                            {\n                                                this.state.pictures.map((picture) => (\n                                                    <GridListTile key={picture.id} style={{\n                                                        height: '400px',\n                                                        width: '45%',\n                                                        margin: '20px',\n                                                    }}>\n                                                        <img src={picture.content} alt={picture.title} />\n                                                        <GridListTileBar\n                                                            title={picture.title}\n                                                            subtitle={<span>by: {`${this.state.user.givenName} ${this.state.user.familyName}`}</span>}\n                                                        />\n                                                    </GridListTile>\n                                                ))\n                                            }\n                                        </GridList>\n                                    </div>\n\n\n                                </div>\n                        }\n\n                    </div>\n\n                    <Menu\n                        id='main-menu'\n                        anchorEl={this.state.mainMenu}\n                        keepMounted\n                        open={Boolean(this.state.mainMenu)}\n                        onClose={() => this.setState({ mainMenu: false })}>\n\n                        <MenuItem>\n                            <Grid container direction='row' spacing={4}>\n                                <Grid item container justify='center' alignItems='center'>\n                                    <Avatar\n                                        src={this.state.user.imageUrl}\n                                        variant='circle'\n                                        style={{ height: '64px', width: '64px' }} />\n                                </Grid>\n\n                                <Grid container item justify='center' alignItems='center'>\n                                    <Typography variant='body1' align='center' style={{ fontSize: 24 }}>\n                                        {`${this.state.user.givenName} ${this.state.user.familyName}`}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </MenuItem>\n\n                        <MenuItem\n                            onClick={() => this.props.history.push('/upload')}\n                            style={{ padding: 16, backgroundColor: '#af0404' }} >\n                            <Typography variant='body1' align='center' style={{ color: 'white' }}>\n                                New Picture\n                            </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.props.history.push('/dashboard')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Dashboard\n                        </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.props.history.push('/profile')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Profile\n                        </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.handleLogout()} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Sign Out\n                        </Typography>\n                        </MenuItem>\n                    </Menu>\n\n                </div>\n            </ThemeProvider>\n            \n        )\n    }\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../resources/theme';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport serverUrl from '../resources/config';\n\nexport default class Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            redirect: false,\n            loading: true,\n            user: null,\n            pictures: null,\n            mainMenu: false\n        }\n\n    }\n\n    async getUser(token) {\n        let rawResponse = await fetch(`${serverUrl}/user/login?accessToken=${token}`);\n        let content = await rawResponse.json();\n\n        console.log(content);\n\n        if (content.error)\n            throw Error(content.errorMessage);\n\n        this.setState({ user: content.profile });\n\n        return;\n    }\n\n    handleLogout() {\n        Cookies.remove('TOKEN');\n\n        this.props.history.push('/');\n    }\n\n    async getPictures() {\n        let rawResponse = await fetch(`${serverUrl}/picture?num=10`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n\n        let content = await rawResponse.json();\n        console.log(content);\n        if (content.error)\n            throw Error(content.errorMessage)\n\n        return content;\n    }\n\n    componentDidMount() {\n\n        var token = Cookies.get('TOKEN');\n        if (token != null) {\n            \n            this.getUser(token)\n                .then(() => this.getPictures())\n                .then((content) => this.setState({ pictures: content.pictures, loading: false, error: false }))\n                .catch((error) => {\n                    console.error(error);\n                    this.setState({ loading: false, error: true });\n            })\n        }\n        else {\n            this.setState({ loading: false, redirect: true });\n        }\n\n    }\n    \n    render() {\n        if (this.state.loading)\n            return (\n                <Backdrop\n                    open={this.state.loading}\n                />\n            )\n        \n        else if (this.state.redirect)\n            return (\n                <Redirect to={{\n                    pathname: '/'\n                }}/>\n            )\n        \n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black' }}>\n                                <Link color='inherit' onClick={() => this.props.history.push('/')}>\n                                    ReactStock\n                            </Link>\n                            </Typography>\n\n                            <Avatar\n                                src={this.state.user.imageUrl}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px' }}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })}\n                            />\n\n                        </Toolbar>\n                    </AppBar>\n\n                    <Typography variant='h4' style={{\n                        marginLeft: '80px',\n                        marginTop: '80px'\n                    }}>\n                        Dashboard\n                    </Typography>\n\n                    <Divider variant='middle'\n                        style={{\n                            height: '4px',\n                            marginTop: '12px',\n                            backgroundColor: '#af0404'\n                        }} />\n\n                    <div style={{\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        overflow: 'hidden',\n                        marginTop: '40px'\n                    }}>\n                        <GridList\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}>\n\n                            {\n                                this.state.pictures.map((picture) => (\n                                    <GridListTile\n                                        key={picture._id}\n                                        style={{\n                                            height: '400px',\n                                            width: '45%',\n                                            margin: '20px',\n                                        }}>\n                                        <img src={picture.content} alt={picture.title} />\n                                        <GridListTileBar\n                                            title={picture.title}\n                                            subtitle={<span>by: {`${this.state.user.givenName} ${this.state.user.familyName}`}</span>}\n\n                                        />\n                                    </GridListTile>\n                                ))\n                            }\n                        </GridList>\n                    </div>\n\n                    <Menu\n                        id='main-menu'\n                        anchorEl={this.state.mainMenu}\n                        keepMounted\n                        open={Boolean(this.state.mainMenu)}\n                        onClose={() => this.setState({ mainMenu: false })}>\n\n                        <MenuItem>\n                            <Grid container direction='row' spacing={4}>\n                                <Grid item container justify='center' alignItems='center'>\n                                    <Avatar\n                                        src={this.state.user.imageUrl}\n                                        variant='circle'\n                                        style={{ height: '64px', width: '64px' }} />\n                                </Grid>\n\n                                <Grid container item justify='center' alignItems='center'>\n                                    <Typography variant='body1' align='center' style={{ fontSize: 24 }}>\n                                        {`${this.state.user.givenName} ${this.state.user.familyName}`}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </MenuItem>\n\n                        <MenuItem\n                            onClick={() => this.props.history.push('/upload')}\n                            style={{ padding: 16, backgroundColor: '#af0404' }} >\n                            <Typography variant='body1' align='center' style={{color: 'white'}}>\n                                New Picture\n                            </Typography>\n                        </MenuItem>\n\n                        <MenuItem style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Dashboard\n                        </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.props.history.push('/profile')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Profile\n                        </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.handleLogout()} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Sign Out\n                        </Typography>\n                        </MenuItem>\n                    </Menu>\n\n                </div>\n            </ThemeProvider>\n            \n        )\n    }\n}","import React from 'react';\nimport Cookies from 'js-cookie';\nimport imageCompression from 'browser-image-compression';\nimport { Redirect } from 'react-router-dom';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../resources/theme';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport serverUrl from '../resources/config';\n\n\n\nexport default class Upload extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            redirect: false,\n            error: false,\n            errorMessage: '',\n            user: null,\n            encodedImage: '',\n            title: ''\n        }\n\n        this.imageInput = null;\n    }\n\n    async getUser(token) {\n        let rawResponse = await fetch(`${serverUrl}/user/login?accessToken=${token}`);\n        let content = await rawResponse.json();\n\n        console.log(content);\n\n        if (content.error)\n            throw Error(content.errorMessage);\n\n        this.setState({ user: content.profile });\n\n        return;\n    }\n\n    handleLogout() {\n        Cookies.remove('TOKEN');\n\n        this.props.history.push('/');\n    }\n\n    imageSelectHandler = event => {\n\n        console.log(event.target.files[0]);\n\n        imageCompression.getDataUrlFromFile(event.target.files[0])\n            .then(encodedImage => {\n                this.setState({ encodedImage });\n            })\n            .catch((error) => console.error(error));\n    }\n\n    async validateTitle() {\n        if (this.state.title == '')\n            throw Error('ERR_TITLE');\n    }\n\n    async uploadPicture() {\n        const { encodedImage, title } = this.state;\n        const accessToken = Cookies.get('TOKEN');\n        \n        const body = JSON.stringify({\n            picture: encodedImage,\n            title: title\n        });\n\n        let rawResponse = await fetch(`${serverUrl}/picture?accessToken=${accessToken}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: body\n        });\n        let content = await rawResponse.json();\n        console.log(content);\n        if (content.error)\n            throw Error(content.errorMessage)\n        \n        return content;\n    }\n\n    handlePictureUpload() {\n\n        this.setState({ loading: true, error: false });\n\n        this.validateTitle()\n            .then(() => this.uploadPicture())\n            .then((content) => {\n                console.log(content);\n                this.setState({ loading: false, redirect: true, error: false });\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.message == 'ERR_TITLE') {\n                    this.setState({ loading: false, error: true, errorMessage: 'Invalid Title' });\n                }\n                else {\n                    this.setState({ loading: false, error: true, errorMessage: 'An error occurred' });\n                }\n        })\n    }\n\n    componentDidMount() {\n\n        var token = Cookies.get('TOKEN');\n        if (token != null) {\n            \n            this.getUser(token)\n                .then(() => this.setState({ loading: false, error: false, redirect: false }))\n                .catch((error) => {\n                    console.error(error);\n                    this.setState({ error: true, loading: false, redirect: false });\n            })\n        }\n        else {\n            this.setState({ loading: false, redirect: true });\n        }\n        \n    }\n\n    render() {\n        if (this.state.loading)\n            return (\n                <Backdrop open={this.state.loading}/>\n            )\n        \n        else if (this.state.redirect) \n            return (\n                <Redirect to={{\n                    pathname: '/',\n                }}/>\n            )\n        \n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black' }}>\n                                <Link color='inherit' onClick={() => this.props.history.push('/')}>\n                                    ReactStock\n                            </Link>\n                            </Typography>\n\n                            <Avatar\n                                src={this.state.user.imageUrl}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px' }}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })}\n                            />\n\n                        </Toolbar>\n                    </AppBar>\n\n                    <input\n                        style={{ display: 'none' }}\n                        type='file'\n                        onChange={this.imageSelectHandler}\n                        ref={imageInput => this.imageInput = imageInput}\n                    />\n\n                    {\n                        this.state.encodedImage === '' ?\n                            <div style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                marginTop: '80px'}}>\n\n                                <Typography variant='body1' align='center'>\n                                    No picture selected\n                                </Typography>\n\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        textTransform: 'none',\n                                        margin: '16px',\n                                        fontSize: '20px',\n                                        borderRadius: '20px'\n                                    }}\n                                    color='primary'\n                                    onClick={() => this.imageInput.click()}>\n                                    Select Image\n                                </Button>\n\n                            </div>\n\n                            :\n\n                            <div style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                marginTop: '40px'}}>\n\n                                <img\n                                    src={this.state.encodedImage}\n                                    style={{\n                                        objectFit: 'cover',\n                                        width: '80%',\n                                        height: 'auto',\n                                        boxShadow: '0px 6px 6px 6px rgb(0,0,0,0.4)',\n                                        borderRadius: '16px'\n                                    }}/>\n\n                                <TextField\n                                    id=\"standard-basic\"\n                                    label=\"A Catchy Title\"\n                                    size='medium'\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '28px'\n                                        }\n                                    }}\n                                    style={{\n                                        marginTop: '24px',\n                                        marginBottom: '8px'\n                                    }}\n                                    onChange={(event) => this.setState({ title: event.target.value })}\n                                />\n\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        marginTop: '4px',\n                                        marginBottom: '32px',\n                                        fontSize: '24px',\n                                        textTransform: 'none',\n                                        borderRadius: '32px',\n                                        paddingLeft: '40px',\n                                        paddingRight: '40px'\n                                    }}\n                                    color='primary'\n                                    onClick={() => this.handlePictureUpload()}>\n                                    Upload\n                                </Button>\n\n                                <Button\n                                    variant='contained'\n                                    style={{\n                                        marginTop: '8px',\n                                        marginBottom: '32px',\n                                        textTransform: 'none',\n                                        borderRadius: '20px'\n                                    }}\n                                    color='secondary'\n                                    onClick={() => this.imageInput.click()}>\n                                    Change Picture\n                                </Button>\n                                \n                            </div>\n                    }\n\n                    <Menu\n                        id='main-menu'\n                        anchorEl={this.state.mainMenu}\n                        keepMounted\n                        open={Boolean(this.state.mainMenu)}\n                        onClose={() => this.setState({ mainMenu: false })}>\n\n                        <MenuItem>\n                            <Grid container direction='row' spacing={4}>\n                                <Grid item container justify='center' alignItems='center'>\n                                    <Avatar\n                                        src={this.state.user.imageUrl}\n                                        variant='circle'\n                                        style={{ height: '64px', width: '64px' }} />\n                                </Grid>\n\n                                <Grid container item justify='center' alignItems='center'>\n                                    <Typography variant='body1' align='center' style={{ fontSize: 24 }}>\n                                        {`${this.state.user.givenName} ${this.state.user.familyName}`}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </MenuItem>\n\n                        <MenuItem\n                            onClick={() => this.props.history.push('/upload')}\n                            style={{ padding: 16, backgroundColor: '#af0404' }} >\n                            <Typography variant='body1' align='center' style={{ color: 'white' }}>\n                                New Picture\n                            </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.props.history.push('/dashboard')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Dashboard\n                        </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.props.history.push('/profile')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Profile\n                        </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.handleLogout()} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Sign Out\n                        </Typography>\n                        </MenuItem>\n                    </Menu>\n\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        open={this.state.error}\n                        autoHideDuration={4000}\n                        onClose={() => this.setState({ error: false})}\n                        message={this.state.errorMessage}\n                        action={\n                            <React.Fragment>\n                                <IconButton size=\"small\" aria-label=\"close\" onClick={() => this.setState({ error: false})}>\n                                    <CloseIcon fontSize=\"small\" />\n                                </IconButton>\n                            </React.Fragment>\n                        }\n                    />\n                </div>\n            </ThemeProvider>\n    \n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './screens/Home';\nimport Profile from './screens/Profile';\nimport Dashboard from './screens/Dashboard';\nimport Upload from './screens/Upload';\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route exact path=\"/profile\" component={Profile} />\n\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t<Route exact path=\"/upload\" component={Upload} />\n\t\t\t</Switch>\n\t\t</Router>\n\t)\n}","const serverUrl = 'http://localhost:8000';\n\nmodule.exports = serverUrl;","module.exports = __webpack_public_path__ + \"static/media/home-background.dbe5ad59.png\";"],"sourceRoot":""}